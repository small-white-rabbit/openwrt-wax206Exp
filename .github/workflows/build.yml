name: 编译 OpenWrt 固件 - MediaTek mt7622 (WAX206)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 检查磁盘空间（编译前）
        run: df -h
        if: always()

      - name: 设置缓存
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            ./dl
          key: ${{ runner.os }}-openwrt-mt7622-${{ hashFiles('configs/mt7622_wax206.config') }}
          restore-keys: |
            ${{ runner.os }}-openwrt-mt7622-

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
            file wget subversion python3 curl
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: 清理编译环境（编译前）
        run: |
          make clean
          rm -rf tmp/* build_dir/* staging_dir/*
        if: always()

      - name: 初始化 feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 复制配置文件
        run: |
          cp configs/mt7622_wax206.config .config || echo "错误：未找到 configs/mt7622_wax206.config"
          make defconfig

      - name: 下载依赖
        run: make download -j$(nproc)

      - name: 编译固件
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          make -j2 V=s
        env:
          CONFIG_SIGNED_PACKAGES: ""

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware-mt7622-wax206
          path: bin/targets/mediatek/mt7622/*.bin
          retention-days: 7
        if: always()

      - name: 清理编译环境（编译后）
        run: |
          make clean
          rm -rf tmp/* build_dir/* staging_dir/*
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
        if: always()

      - name: 检查磁盘空间（编译后）
        run: df -h
        if: always()

      - name: 创建 GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: bin/targets/mediatek/mt7622/*.bin
          tag_name: "firmware-mt7622-wax206-${{ github.sha }}"
          name: "WAX206 固件 ${{ github.sha }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
